const path = require("path");
const { CleanWebpackPlugin } = require('clean-webpack-plugin');

const HtmlWebpackPlugin = require('html-webpack-plugin');
//used for generate index.html file in dist after "run build" or root directory after "run dev".

module.exports = {
    mode: "development",        //"development" or "production".

    // devtool: "eval-source-map",
    //for security reason, default value or "nosource-source-map" is recommend when deployment.

    entry: path.join(__dirname, "./src/index.js"),
    output: {
        path: path.join(__dirname, "./dist"),
        filename: "main.js",

        //By default, a virtual main.js file which generated by webpack-dev-server will be deployed at root directory.
    },
    devServer: {
        port: 3000,
        static: {
            directory: __dirname,
            //Tell the server where to serve the content from.
        }
    },
    module: {
        //Only when webpack can't package the file "module" chunk will be invoked.

        rules:[     //Matching rules for file suffix names
            { test: /\.css$/, use: ["style-loader", "css-loader"] },
            //Can't exchange the order of two loader, the loader was called backward(in this case, the css-load will be called first).
            //The style-loader will return the results to webpack after processing, and then webpack will integrate the results into main.js.
            
            { test: /\.jpg|png|gif$/, use: ["url-loader?limit=34597"] },
            //In this case, limit option used for resolving whether the img should be encoded to Base64 format.
            //If the file size is equal or greater than the limit file-loader will be used (by default)

            { test: /\.js$/, use: ["babel-loader"], exclude: /node_modules/ }
        ]
    },
    plugins: [
        new CleanWebpackPlugin(),
        new HtmlWebpackPlugin({
            // title: "webpack-demo",
            //looks like the title tag doesn't work properly when "run once", we need add title manually.

            template: "./public/index.html",
            favicon: "./public/favicon.ico",
            //By default, a virtual index.html will be deployed in the project's root directory,
            //and the favicon.ico file is included if the option is specified.
        })
    ]
}